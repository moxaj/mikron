["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.codegen.gen","~:imports",null,"~:requires",["^ ","~$mikron.compile-util","^9","~$mikron.util","^:","~$compile-util","^9","~$schema","~$mikron.schema","~$mikron.util.coll","^>","~$util","^:","^=","^=","~$mikron.util.schema","^@","~$mikron.util.math","^A","~$util.math","^A","~$util.schema","^@","~$util.coll","^>"],"~:uses",null,"~:defs",["^ ","~$gen",["^ ","^5","~$mikron.codegen.gen/gen","~:file","mikron/codegen/gen.cljc","~:line",12,"~:column",1,"~:end-line",12,"~:end-column",14,"~:meta",["^ ","^I","^6","^J",12,"^K",11,"^L",12,"^M",14],"~:tag","~$cljs.core/MultiFn"],"~$gen-integer",["^ ","~:protocol-inline",null,"^N",["^ ","^I","^6","^J",14,"^K",7,"^L",14,"^M",18,"~:arglists",["~#list",["~$quote",["^T",[["~$bytes","~$signed?"]]]]],"~:doc","Generates code for random integer generation."],"^5","~$mikron.codegen.gen/gen-integer","~:variadic",false,"^I","mikron/codegen/gen.cljc","^M",18,"~:method-params",["^T",[["^V","^W"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^K",1,"^J",14,"^L",14,"~:max-fixed-arity",2,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^V","^W"]]]]],"^X","Generates code for random integer generation."],"~$gen-length",["^ ","^5","~$mikron.codegen.gen/gen-length","^I","mikron/codegen/gen.cljc","^J",10,"^K",1,"^L",10,"^M",16,"^N",["^ ","^I","^6","^J",10,"^K",6,"^L",10,"^M",16],"^O","~$number"]],"~:require-macros",["^ ","^;","^9","^9","^9","^?","^:","^:","^:","^D","^>","^>","^>"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$cljs.core/char","~$cljs.core/unchecked-long","~:enum","~:binary","~:schema","~$cljs.core/str","~$cljs.core/<","~$cljs.core/when","~$hierarchy","~:long","~:double","~:short","~:ushort","~:ubyte","~:int","~:gen","~$cljs.core/apply","~$cljs.core/->","~:uint","~:default","~:float","~:ns","^5","^I","^M","~:coll","~:type","~$mikron.util.math/floor","~:custom","~:tuple","~$cljs.core/-","~$mikron.util.coll/into!","~$mikron.schema/hierarchy","~:string","^K","~$cljs.core/sorted-set-by","~$cljs.core/let","^J","~:multi","~:byte","~$cljs.core/*","~:optional","~:nil","~$mikron.util.math/rand","~:record","^=","^L","~:aliased","~$cljs.core/unchecked-add","~$cljs.core/sorted-map-by","~$mikron.util.coll/rand-nth","~:varint","~:set","^S","~:hierarchy","~$mikron.util.coll/into-kv!","~$mikron.util.schema/double->float","^X","~$cljs.core/case","~$mikron.util.schema/byte-seq->binary","~:sorted-by","~$mikron.util.math/rand-long","~:boolean","~:wrapped","~:map","~:test","~$cljs.core/+","~:char","~:any"]],"~:order",["^2<","^1W","^1O","^5","^I","^M","^K","^J","^L","^S","^X","^2F","^=","^1B","^1M","^1Z","^24","^1K","^21","^2G","^1U","^1R","^1;","^20","^1G","^1E","^1F","^1H","^1L","^1C","^2:","^1N","^2>","^1D","^2C","^1@","^2H","^1:","^2B","^1X","^1J","^1?","^1V","^1=","^27","^2@","^2I","^23","^1P","^2;","^2A","^1Y","^2E","^2=","^28","^1T","^25","^1Q","^22","^1A","^1[","^2?","^1<","^29","^2D","^26","^1S","^1I","^1>"]],"^X","Generator generating functions."]