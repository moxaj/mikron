["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Int8Array",["^ "],"~$Array",["^ ","~$from",["^ "]],"~$ArrayBuffer",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.test-macros$macros","~:imports",null,"~:requires",["^ ","~$test","~$cljs.test","^?","^?","~$mikron","~$mikron.core","^A","^A","~$compile-util","~$mikron.compile-util","^C","^C","~$clojure.test","^?"],"~:uses",null,"~:defs",["^ ","~$test-mikron",["^ ","~:meta",["^ ","~:file","~$mikron.test-macros","~:line",19,"~:column",11,"~:end-line",19,"~:end-column",22,"~:doc","Test function for :pack, :diff, :valid? and :interp processors."],"^:","~$mikron.test-macros$macros/test-mikron","^I","mikron/test_macros.cljc","^N",22,"^L",1,"^K",19,"^M",19,"~:tag","~$cljs.core/MultiFn","^O","Test function for :pack, :diff, :valid? and :interp processors."],"~$def-mikron-tests",["^ ","~:protocol-inline",null,"^H",["^ ","^I","^J","^K",39,"^L",11,"^M",39,"^N",27,"~:macro",true,"~:arglists",["~#list",["~$quote",["^W",[["~$test-cases"]]]]],"^O","Generates test methods for all the test cases."],"^:","~$mikron.test-macros$macros/def-mikron-tests","~:variadic",false,"^I","mikron/test_macros.cljc","^N",27,"~:method-params",["^W",[["~$&form","~$&env","^Y"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^L",1,"^K",39,"^U",true,"^M",39,"~:max-fixed-arity",3,"~:fn-var",false,"^V",["^W",["^X",["^W",[["^Y"]]]]],"^O","Generates test methods for all the test cases."],"~$equal?",["^ ","^T",null,"^H",["^ ","^I","^J","^K",9,"^L",7,"^M",9,"^N",13,"^V",["^W",["^X",["^W",[["~$x","~$y"]]]]],"^O","Extended equality checker for byte[] and ArrayBuffer."],"^:","~$mikron.test-macros$macros/equal?","^[",false,"^I","mikron/test_macros.cljc","^N",13,"^10",["^W",[["~$x","~$y"]]],"^13",null,"^14",["^W",[null,null]],"^L",1,"^K",9,"^M",9,"^15",2,"^16",true,"^V",["^W",["^X",["^W",[["~$x","~$y"]]]]],"^O","Extended equality checker for byte[] and ArrayBuffer."]],"~:require-macros",["^ ","^@","^A","^A","^A","^B","^C","^C","^C"],"~:cljs.analyzer/constants",["^ ","~:seen",["^9",["~$mikron/diff","~$mikron/pack","~$=","~$cljs.core/repeatedly","~:valid?","~:default","~$schema","^I","^N","~$mikron/undiff","~:type","~$do","~$mikron/valid?","^L","~$value","~$cljs.core/let","~$value-2","~:fail","~:interp","~$mikron/unpack","^K","~$fn*","~$not","~$mikron.core/schema","~:expected","^17","^M","~$mikron.core/gen","~$value-1","~:error","~$cljs.test/deftest","~:pass","~$mikron.test-macros/test-mikron","~:hierarchy","~:actual","~:pack","~:message","~$->>","~:diff"]],"~:order",["^1V","^1@","^1X","^1C","^1Y","^1O","^1W","^1R","^17","^1F","^1Z","^1=","^1A","^1K","^1T","^1I","^1M","^1[","~$=","^1H","^1<","^1Q","^1B","^1?","^1E","^1J","^I","^K","^L","^M","^N","^1D","^1G","^1N","^1>","^1L","^1P","^1S","^1U"]],"^O","Unit tests for each processor."]