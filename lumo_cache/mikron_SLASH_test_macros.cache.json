["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Int8Array",["^ "],"~$Array",["^ ","~$from",["^ "]],"~$ArrayBuffer",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.test-macros","~:imports",null,"~:requires",["^ ","~$test","~$cljs.test","^?","^?","~$mikron","~$mikron.core","^A","^A","~$compile-util","~$mikron.compile-util","^C","^C","~$clojure.test","^?"],"~:uses",null,"~:defs",["^ ","~$test-mikron",["^ ","~:meta",["^ ","~:file","^;","~:line",19,"~:column",11,"~:end-line",19,"~:end-column",22,"~:doc","Test function for :pack, :diff, :valid? and :interp processors."],"^:","~$mikron.test-macros/test-mikron","^I","mikron/test_macros.cljc","^M",22,"^K",1,"^J",19,"^L",19,"~:tag","~$cljs.core/MultiFn","^N","Test function for :pack, :diff, :valid? and :interp processors."],"~$def-mikron-tests",["^ ","~:protocol-inline",null,"^H",["^ ","^I","^;","^J",39,"^K",11,"^L",39,"^M",27,"~:macro",true,"~:arglists",["~#list",["~$quote",["^V",[["~$test-cases"]]]]],"^N","Generates test methods for all the test cases."],"^:","~$mikron.test-macros/def-mikron-tests","~:variadic",false,"^I","mikron/test_macros.cljc","^M",27,"~:method-params",["^V",[["~$&form","~$&env","^X"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^K",1,"^J",39,"^T",true,"^L",39,"~:max-fixed-arity",3,"~:fn-var",false,"^U",["^V",["^W",["^V",[["^X"]]]]],"^N","Generates test methods for all the test cases."],"~$equal?",["^ ","^S",null,"^H",["^ ","^I","^;","^J",9,"^K",7,"^L",9,"^M",13,"^U",["^V",["^W",["^V",[["~$x","~$y"]]]]],"^N","Extended equality checker for byte[] and ArrayBuffer."],"^:","~$mikron.test-macros/equal?","^Z",false,"^I","mikron/test_macros.cljc","^M",13,"^[",["^V",[["~$x","~$y"]]],"^12",null,"^13",["^V",[null,null]],"^K",1,"^J",9,"^L",9,"^14",2,"^15",true,"^U",["^V",["^W",["^V",[["~$x","~$y"]]]]],"^N","Extended equality checker for byte[] and ArrayBuffer."]],"~:require-macros",["^ ","^;","^;"],"~:cljs.analyzer/constants",["^ ","~:seen",["^9",["~$mikron/diff","~$mikron/pack","~$=","~$cljs.core/repeatedly","~:valid?","~:default","~$schema","^I","^M","~$mikron/undiff","~:type","~$do","~$mikron/valid?","^K","~$value","~$cljs.core/let","~$value-2","~:fail","~:interp","~$mikron/unpack","^J","~$fn*","~$not","~$mikron.core/schema","~:expected","^16","^L","~$mikron.core/gen","~$value-1","~:error","~$cljs.test/deftest","~:pass","^O","~:hierarchy","~:actual","~:pack","~:message","~$->>","~:diff"]],"~:order",["^1T","^1?","^1V","^1B","^1W","^1N","^1U","^1Q","^16","^1E","^1X","^1<","^1@","^1J","^1S","^1H","^1L","^1Y","~$=","^1G","^1;","^1P","^1A","^1>","^1D","^1I","^I","^J","^K","^L","^M","^1C","^1F","^1M","^1=","^1K","^1O","^1R","^O"]],"^N","Unit tests for each processor."]