["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Object",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.util$macros","~:imports",null,"~:requires",["^ ","~$compile-util","~$mikron.compile-util","^<","^<"],"~:uses",null,"~:defs",["^ ","~$safe",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","~$mikron.util","~:end-column",15,"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",3,"~:method-params",[["~#list",["~$&form","~$&env","~$ex-value","~$body"]]],"~:arglists",["^I",[["^J","^K","^L","~$&","^M"]]],"~:arglists-meta",["^I",[null]]],"~:column",11,"~:line",12,"~:macro",true,"~:end-line",12,"^N",["^I",["~$quote",["^I",[["^L","~$&","^M"]]]]],"~:doc","Evaluates each expression of `body` and returns `ex-value` if an exception occured.\n  Otherwise returns the value of the last expression in `body`."],"^7","~$mikron.util$macros/safe","^F",true,"^B","mikron/util.cljc","^D",15,"^E",["^ ","^F",true,"^G",3,"^H",[["^I",["^J","^K","^L","^M"]]],"^N",["^I",[["^J","^K","^L","~$&","^M"]]],"^O",["^I",[null]]],"^H",[["^I",["^J","^K","^L","^M"]]],"~:protocol-impl",null,"^O",["^I",[null]],"^P",1,"^Q",12,"^R",true,"^S",12,"^G",3,"~:fn-var",false,"^N",["^I",[["^J","^K","^L","~$&","^M"]]],"^U","Evaluates each expression of `body` and returns `ex-value` if an exception occured.\n  Otherwise returns the value of the last expression in `body`."],"~$node-env?",["^ ","^@",null,"^A",["^ ","^B","^C","^Q",7,"^P",10,"^S",7,"^D",19,"^N",["^I",["^T",["^I",[[]]]]],"^U","Returns `true` if compiled for Node.js, `false` otherwise."],"^7","~$mikron.util$macros/node-env?","^F",false,"^B","mikron/util.cljc","^D",19,"^H",["^I",[[]]],"^W",null,"^O",["^I",[null,null]],"^P",4,"^Q",7,"^S",7,"^G",0,"^X",true,"^N",["^I",["^T",["^I",[[]]]]],"^U","Returns `true` if compiled for Node.js, `false` otherwise."]],"~:require-macros",["^ ","^;","^<","^<","^<"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~$try","~$do","~$catch","~:ns","~$js/Object","~$mikron.util/Throwable","~$e__4__auto__"]],"~:order",["^12","^13","^14","^15","^16","^17","^18"]],"^U","Generic utility functions."]