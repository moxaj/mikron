["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.buffer-macros","~:imports",null,"~:requires",["^ ","~$s","~$cljs.spec","^9","^9","~$spec","~$mikron.spec","^;","^;","~$compile-util","~$mikron.compile-util","^=","^=","~$clojure.spec","^9"],"~:uses",null,"~:defs",["^ ","~$with-delta",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","^6","~:line",7,"~:column",11,"~:end-line",7,"~:end-column",21,"~:macro",true,"~:arglists",["~#list",["~$quote",["^K",[["~$pos","~$delta","~$body"]]]]],"~:doc","Executes `body` and updates the position `pos` with the delta `delta`."],"^5","~$mikron.buffer-macros/with-delta","~:variadic",false,"^D","mikron/buffer_macros.cljc","^H",21,"~:method-params",["^K",[["~$&form","~$&env","^M","^N","^O"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^F",1,"^E",7,"^I",true,"^G",7,"~:max-fixed-arity",5,"~:fn-var",false,"^J",["^K",["^L",["^K",[["^M","^N","^O"]]]]],"^P","Executes `body` and updates the position `pos` with the delta `delta`."],"~$definterface+",["^ ","^B",null,"^C",["^ ","^D","^6","^H",24,"~:top-fn",["^ ","^R",true,"^X",3,"^S",[["^K",["^T","^U","~$name","~$ops"]]],"^J",["^K",[["^T","^U","^10","~$&","^11"]]],"^W",["^K",[null]]],"^F",11,"^E",22,"^I",true,"^G",22,"^J",["^K",["^L",["^K",[["^10","~$&","^11"]]]]],"^P","Expands to a `definterface` call in clj, `defprotocol` call in cljs."],"^5","~$mikron.buffer-macros/definterface+","^R",true,"^D","mikron/buffer_macros.cljc","^H",24,"^[",["^ ","^R",true,"^X",3,"^S",[["^K",["^T","^U","^10","^11"]]],"^J",["^K",[["^T","^U","^10","~$&","^11"]]],"^W",["^K",[null]]],"^S",[["^K",["^T","^U","^10","^11"]]],"^V",null,"^W",["^K",[null]],"^F",1,"^E",22,"^I",true,"^G",22,"^X",3,"^Y",false,"^J",["^K",[["^T","^U","^10","~$&","^11"]]],"^P","Expands to a `definterface` call in clj, `defprotocol` call in cljs."],"~$with-le",["^ ","^B",null,"^C",["^ ","^D","^6","^E",15,"^F",11,"^G",15,"^H",18,"^I",true,"^J",["^K",["^L",["^K",[["~$le",["~$expr","~$&","~$exprs"]]]]]],"^P","Executes the expressions with the endianness automatically set to `le`."],"^5","~$mikron.buffer-macros/with-le","^R",false,"^D","mikron/buffer_macros.cljc","^H",18,"^S",["^K",[["^T","^U","^14","~$p__215"]]],"^V",null,"^W",["^K",[null,null]],"^F",1,"^E",15,"^I",true,"^G",15,"^X",4,"^Y",false,"^J",["^K",["^L",["^K",[["^14",["^15","~$&","^16"]]]]]],"^P","Executes the expressions with the endianness automatically set to `le`."]],"~:require-macros",["^ ","^6","^6","^<","^=","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:args","~$&","^17","^O","^14","~$mikron.buffer-macros/definterface","^A","^Z","~:ns","^5","^T","^R","^D","~$cljs.core/concat","^H","^[","~$cljs.core/defn","~$cljs.core/defprotocol","^6","~$do","^S","~:mikron.spec/definterface+-args","^16","~$this","~$if","^W","^F","^10","~$cljs.core/let","^E","^M","^I","^U","~$cljs.core/fn","^11","^G","~$cljs.core/unchecked-add","^13","~$cljs.core/sequence","^X","~$set!","~:tag","^L","^J","^15","~$cljs.spec/fspec","^P","^N","^Q","^12","~$cljs.core/list","~:test","~:inline"]],"~:order",["^D","^E","^F","^G","^H","^1F","^1J","^1H","^Q","^1>","^5","^I","^J","^P","^1N","^6","^A","^M","^N","^O","^1E","^17","^13","^14","^15","~$&","^16","^12","^[","^Z","^R","^X","^S","^W","^T","^U","^10","^11","^1D","^1A","^1=","^1B","^1@","^1O","^1G","^1I","^1?","^1M","^L","^1K","^1L","^1<","^1C"]],"^P",null]