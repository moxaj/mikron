["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.buffer-macros","~:imports",null,"~:requires",["^ ","~$compile-util","~$mikron.compile-util","^:","^:"],"~:uses",null,"~:defs",["^ ","~$with-delta",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","^6","~:line",5,"~:column",11,"~:end-line",5,"~:end-column",21,"~:macro",true,"~:arglists",["~#list",["~$quote",["^G",[["~$pos","~$delta","~$body"]]]]],"~:doc","Executes `body` and updates the position `pos` with the delta `delta`."],"^5","~$mikron.buffer-macros/with-delta","~:variadic",false,"^@","mikron/buffer_macros.cljc","^D",21,"~:method-params",["^G",[["~$&form","~$&env","^I","^J","^K"]]],"~:protocol-impl",null,"~:arglists-meta",["^G",[null,null]],"^B",1,"^A",5,"^E",true,"^C",5,"~:max-fixed-arity",5,"~:fn-var",false,"^F",["^G",["^H",["^G",[["^I","^J","^K"]]]]],"^L","Executes `body` and updates the position `pos` with the delta `delta`."],"~$definterface+",["^ ","^>",null,"^?",["^ ","^@","^6","^D",24,"~:top-fn",["^ ","^N",true,"^T",3,"^O",[["^G",["^P","^Q","~$name","~$ops"]]],"^F",["^G",[["^P","^Q","^X","~$&","^Y"]]],"^S",["^G",[null]]],"^B",11,"^A",20,"^E",true,"^C",20,"^F",["^G",["^H",["^G",[["^X","~$&","^Y"]]]]],"^L","Expands to a `definterface` call in clj, `defprotocol` call in cljs."],"^5","~$mikron.buffer-macros/definterface+","^N",true,"^@","mikron/buffer_macros.cljc","^D",24,"^W",["^ ","^N",true,"^T",3,"^O",[["^G",["^P","^Q","^X","^Y"]]],"^F",["^G",[["^P","^Q","^X","~$&","^Y"]]],"^S",["^G",[null]]],"^O",[["^G",["^P","^Q","^X","^Y"]]],"^R",null,"^S",["^G",[null]],"^B",1,"^A",20,"^E",true,"^C",20,"^T",3,"^U",false,"^F",["^G",[["^P","^Q","^X","~$&","^Y"]]],"^L","Expands to a `definterface` call in clj, `defprotocol` call in cljs."],"~$with-le",["^ ","^>",null,"^?",["^ ","^@","^6","^A",13,"^B",11,"^C",13,"^D",18,"^E",true,"^F",["^G",["^H",["^G",[["~$le",["~$expr","~$&","~$exprs"]]]]]],"^L","Executes the expressions with the endianness automatically set to `le`."],"^5","~$mikron.buffer-macros/with-le","^N",false,"^@","mikron/buffer_macros.cljc","^D",18,"^O",["^G",[["^P","^Q","^10","~$p__216"]]],"^R",null,"^S",["^G",[null,null]],"^B",1,"^A",13,"^E",true,"^C",13,"^T",4,"^U",false,"^F",["^G",["^H",["^G",[["^10",["^11","~$&","^12"]]]]]],"^L","Executes the expressions with the endianness automatically set to `le`."]],"~:require-macros",["^ ","^6","^6","^9","^:","^:","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$&","^13","^K","^10","~$mikron.buffer-macros/definterface","^=","^V","~:ns","^5","^P","^N","^@","~$cljs.core/concat","^D","^W","~$cljs.core/defn","~$cljs.core/defprotocol","^6","~$do","^O","^12","~$this","~$if","^S","^B","^X","~$cljs.core/let","^A","^I","^E","^Q","~$cljs.core/fn","^Y","^C","~$cljs.core/unchecked-add","^[","~$cljs.core/sequence","^T","~$set!","~:tag","^H","^F","^11","^L","^J","^M","^Z","~$cljs.core/list","~:test","~:inline"]],"~:order",["^@","^A","^B","^C","^D","^1@","^1D","^1B","^M","^19","^5","^E","^F","^L","^1G","^6","^=","^I","^J","^K","^1?","^13","^[","^10","^11","~$&","^12","^Z","^W","^V","^N","^T","^O","^S","^P","^Q","^X","^Y","^1>","^1<","^18","^1=","^1;","^1H","^1A","^1C","^1:","^1F","^H","^1E"]],"^L",null]