["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.codegen.gen","~:imports",null,"~:requires",["^ ","~$mikron.compile-util","^9","~$compile-util","^9","~$schema","~$mikron.schema","~$mikron.util.coll","^=","^<","^<","~$mikron.util.schema","^>","~$mikron.util.math","^?","~$util.math","^?","~$util.schema","^>","~$util.coll","^="],"~:uses",null,"~:defs",["^ ","~$gen",["^ ","^5","~$mikron.codegen.gen/gen","~:file","mikron/codegen/gen.cljc","~:line",11,"~:column",1,"~:end-line",11,"~:end-column",14,"~:meta",["^ ","^G","^6","^H",11,"^I",11,"^J",11,"^K",14],"~:tag","~$cljs.core/MultiFn"],"~$gen-integer",["^ ","~:protocol-inline",null,"^L",["^ ","^G","^6","^H",13,"^I",7,"^J",13,"^K",18,"~:arglists",["~#list",["~$quote",["^R",[["~$bytes","~$signed?"]]]]],"~:doc","Generates code for random integer generation."],"^5","~$mikron.codegen.gen/gen-integer","~:variadic",false,"^G","mikron/codegen/gen.cljc","^K",18,"~:method-params",["^R",[["^T","^U"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^I",1,"^H",13,"^J",13,"~:max-fixed-arity",2,"~:fn-var",true,"^Q",["^R",["^S",["^R",[["^T","^U"]]]]],"^V","Generates code for random integer generation."],"~$gen-length",["^ ","^5","~$mikron.codegen.gen/gen-length","^G","mikron/codegen/gen.cljc","^H",9,"^I",1,"^J",9,"^K",16,"^L",["^ ","^G","^6","^H",9,"^I",6,"^J",9,"^K",16],"^M","~$number"]],"~:require-macros",["^ ","^:","^9","^9","^9","^B","^=","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$cljs.core/char","~$cljs.core/unchecked-long","^U","~:enum","~:binary","~:schema","~$cljs.core/str","~$cljs.core/<","~$cljs.core/when","~$hierarchy","~:long","~:double","~:short","~:ushort","^6","~:ubyte","~:int","~:gen","^F","^13","~$cljs.core/apply","~$cljs.core/->","~:uint","~:default","~:float","~:ns","^5","^G","^K","~:coll","~:type","~$mikron.util.math/floor","~:custom","~:tuple","^E","~$cljs.core/-","~$mikron.util.coll/into!","~$mikron.schema/hierarchy","~:string","^I","~$cljs.core/sorted-set-by","~$cljs.core/let","^H","~:multi","~:byte","~$cljs.core/*","~:optional","~:nil","~$mikron.util.math/rand","~:record","^<","^J","~:aliased","~$cljs.core/unchecked-add","~$cljs.core/sorted-map-by","~$mikron.util.coll/rand-nth","~:varint","~:set","^W","^Q","~:hierarchy","~$mikron.util.coll/into-kv!","~$mikron.util.schema/double->float","^V","~$cljs.core/case","~$mikron.util.schema/byte-seq->binary","~:sorted-by","~$mikron.util.math/rand-long","~:boolean","~:wrapped","^O","~:map","~:test","~$cljs.core/+","^12","~:char","~:any","^T"]],"~:order",["^13","^1M","^5","^G","^K","^I","^H","^J","^Q","^V","^2D","^6","^12","^2:","^1U","^<","^1@","^1K","^F","^E","^1X","^22","^1I","^1[","^2E","^1S","^1P","^19","^W","^O","^T","^U","^1Z","^1E","^1C","^1D","^1F","^1J","^1A","^28","^1L","^2<","^1B","^2A","^1>","^2F","^18","^2@","^1V","^1H","^1=","^1T","^1;","^25","^2>","^2G","^21","^1N","^29","^2?","^1W","^2C","^2;","^26","^1R","^23","^1O","^20","^1?","^1Y","^2=","^1:","^27","^2B","^24","^1Q","^1G","^1<"]],"^V","Generator generating functions."]