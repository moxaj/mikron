["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.codegen.gen","~:imports",null,"~:requires",["^ ","~$mikron.compile-util","^9","~$mikron.util","^:","~$compile-util","^9","~$schema","~$mikron.schema","~$mikron.util.coll","^>","~$util","^:","^=","^=","~$mikron.util.schema","^@","~$mikron.util.math","^A","~$util.math","^A","~$util.schema","^@","~$util.coll","^>"],"~:uses",null,"~:defs",["^ ","~$gen",["^ ","^5","~$mikron.codegen.gen/gen","~:file","mikron/codegen/gen.cljc","~:line",12,"~:column",1,"~:end-line",12,"~:end-column",14,"~:meta",["^ ","^I","^6","^J",12,"^K",11,"^L",12,"^M",14]],"~$gen-integer",["^ ","~:protocol-inline",null,"^N",["^ ","^I","^6","^J",14,"^K",7,"^L",14,"^M",18,"~:arglists",["~#list",["~$quote",["^R",[["~$bytes","~$signed?"]]]]],"~:doc","Generates code for random integer generation."],"^5","~$mikron.codegen.gen/gen-integer","~:variadic",false,"^I","mikron/codegen/gen.cljc","^M",18,"~:method-params",["^R",[["^T","^U"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^K",1,"^J",14,"^L",14,"~:max-fixed-arity",2,"~:fn-var",true,"^Q",["^R",["^S",["^R",[["^T","^U"]]]]],"^V","Generates code for random integer generation."],"~$gen-length",["^ ","^5","~$mikron.codegen.gen/gen-length","^I","mikron/codegen/gen.cljc","^J",10,"^K",1,"^L",10,"^M",16,"^N",["^ ","^I","^6","^J",10,"^K",6,"^L",10,"^M",16]]],"~:require-macros",["^ ","^;","^9","^9","^9","^?","^:","^:","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$cljs.core/char","~$cljs.core/unchecked-long","^U","~:enum","~:binary","~:schema","~$cljs.core/str","~$cljs.core/<","~$cljs.core/when","~$hierarchy","~:long","~:double","~:short","~:ushort","^6","~:ubyte","~:int","~:gen","^H","^13","~$cljs.core/apply","~$cljs.core/->","~:uint","~:default","~:float","~:ns","^5","^I","^M","~:coll","~:type","~$mikron.util.math/floor","~:custom","~:tuple","^G","~$cljs.core/-","~$mikron.util.coll/into!","~$mikron.schema/hierarchy","~:string","^K","~$cljs.core/sorted-set-by","~$cljs.core/let","^J","~:multi","~:byte","~$cljs.core/*","~:optional","~:nil","~$mikron.util.math/rand","~:record","^=","^L","~:aliased","~$cljs.core/unchecked-add","~$cljs.core/sorted-map-by","~$mikron.util.coll/rand-nth","~:varint","~:set","^W","^Q","~:hierarchy","~$mikron.util.coll/into-kv!","~$mikron.util.schema/double->float","^V","~$cljs.core/case","~$mikron.util.schema/byte-seq->binary","~:sorted-by","~$mikron.util.math/rand-long","~:boolean","~:wrapped","^O","~:map","~:test","~$cljs.core/+","^12","~:char","~:any","^T"]],"~:order",["^13","^1L","^5","^I","^M","^K","^J","^L","^Q","^V","^2C","^6","^12","^29","^1T","^=","^1?","^1J","^H","^G","^1W","^21","^1H","^1Z","^2D","^1R","^1O","^18","^W","^O","^T","^U","^1Y","^1D","^1B","^1C","^1E","^1I","^1@","^27","^1K","^2;","^1A","^2@","^1=","^2E","^17","^2?","^1U","^1G","^1<","^1S","^1:","^24","^2=","^2F","^20","^1M","^28","^2>","^1V","^2B","^2:","^25","^1Q","^22","^1N","^1[","^1>","^1X","^2<","^19","^26","^2A","^23","^1P","^1F","^1;"]],"^V","Generator generating functions."]