["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mikron.buffer-macros$macros","~:imports",null,"~:requires",["^ ","~$compile-util","~$mikron.compile-util","^:","^:"],"~:uses",null,"~:defs",["^ ","~$with-delta",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","~$mikron.buffer-macros","~:line",5,"~:column",11,"~:end-line",5,"~:end-column",21,"~:macro",true,"~:arglists",["~#list",["~$quote",["^H",[["~$pos","~$delta","~$body"]]]]],"~:doc","Executes `body` and updates the position `pos` with the delta `delta`."],"^5","~$mikron.buffer-macros$macros/with-delta","~:variadic",false,"^@","mikron/buffer_macros.cljc","^E",21,"~:method-params",["^H",[["~$&form","~$&env","^J","^K","^L"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^C",1,"^B",5,"^F",true,"^D",5,"~:max-fixed-arity",5,"~:fn-var",false,"^G",["^H",["^I",["^H",[["^J","^K","^L"]]]]],"^M","Executes `body` and updates the position `pos` with the delta `delta`."],"~$definterface+",["^ ","^>",null,"^?",["^ ","^@","^A","^E",24,"~:top-fn",["^ ","^O",true,"^U",3,"^P",[["^H",["^Q","^R","~$name","~$ops"]]],"^G",["^H",[["^Q","^R","^Y","~$&","^Z"]]],"^T",["^H",[null]]],"^C",11,"^B",20,"^F",true,"^D",20,"^G",["^H",["^I",["^H",[["^Y","~$&","^Z"]]]]],"^M","Expands to a `definterface` call in clj, `defprotocol` call in cljs."],"^5","~$mikron.buffer-macros$macros/definterface+","^O",true,"^@","mikron/buffer_macros.cljc","^E",24,"^X",["^ ","^O",true,"^U",3,"^P",[["^H",["^Q","^R","^Y","^Z"]]],"^G",["^H",[["^Q","^R","^Y","~$&","^Z"]]],"^T",["^H",[null]]],"^P",[["^H",["^Q","^R","^Y","^Z"]]],"^S",null,"^T",["^H",[null]],"^C",1,"^B",20,"^F",true,"^D",20,"^U",3,"^V",false,"^G",["^H",[["^Q","^R","^Y","~$&","^Z"]]],"^M","Expands to a `definterface` call in clj, `defprotocol` call in cljs."],"~$with-le",["^ ","^>",null,"^?",["^ ","^@","^A","^B",13,"^C",11,"^D",13,"^E",18,"^F",true,"^G",["^H",["^I",["^H",[["~$le",["~$expr","~$&","~$exprs"]]]]]],"^M","Executes the expressions with the endianness automatically set to `le`."],"^5","~$mikron.buffer-macros$macros/with-le","^O",false,"^@","mikron/buffer_macros.cljc","^E",18,"^P",["^H",[["^Q","^R","^11","~$p__190"]]],"^S",null,"^T",["^H",[null,null]],"^C",1,"^B",13,"^F",true,"^D",13,"^U",4,"^V",false,"^G",["^H",["^I",["^H",[["^11",["^12","~$&","^13"]]]]]],"^M","Executes the expressions with the endianness automatically set to `le`."]],"~:require-macros",["^ ","^9","^:","^:","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$&","^6","^L","^11","~$mikron.buffer-macros/definterface","^=","^W","^[","^N","~:ns","^5","^Q","^O","^@","~$cljs.core/concat","^E","^X","~$cljs.core/defn","~$cljs.core/defprotocol","~$do","^P","^13","~$this","~$if","^T","^C","^Y","~$cljs.core/let","^B","^J","^F","^R","~$cljs.core/fn","^Z","^D","~$cljs.core/unchecked-add","^10","~$cljs.core/sequence","^U","~$set!","~:tag","^I","^G","^12","^M","^K","~$cljs.core/list","^14","~:test","~:inline"]],"~:order",["^@","^B","^C","^D","^E","^1A","^1E","^1C","^N","^1:","^5","^F","^G","^M","^1H","^6","^=","^J","^K","^L","^1@","^14","^10","^11","^12","~$&","^13","^[","^X","^W","^O","^U","^P","^T","^Q","^R","^Y","^Z","^1?","^1=","^19","^1>","^1<","^1I","^1B","^1D","^1;","^1G","^I","^1F"]],"^M",null]