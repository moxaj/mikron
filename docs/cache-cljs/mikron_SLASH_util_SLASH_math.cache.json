["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$and","~$or","~$not","~$zero?","~$rand","~$rand-int"]],"~:name","~$mikron.util.math","~:imports",["^ ","~$Long","~$goog.math.Long"],"~:requires",["^ ","^>","^?"],"~:uses",null,"~:defs",["^ ","~$negate",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","^<","~:line",117,"~:column",7,"~:end-line",117,"~:end-column",13,"~:arglists",["~#list",["~$quote",["^L",[["~$x"]]]]],"~:doc","Negates a long `x`."],"^;","~$mikron.util.math/negate","~:variadic",false,"^F","mikron/util/math.cljc","^J",13,"~:method-params",["^L",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^H",1,"^G",117,"^I",117,"~:max-fixed-arity",1,"~:fn-var",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Negates a long `x`."],"~$floor",["^ ","^D",null,"^E",["^ ","^F","^<","^G",21,"^H",7,"^I",21,"^J",12,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Returns the floor of `x`."],"^;","~$mikron.util.math/floor","^P",false,"^F","mikron/util/math.cljc","^J",12,"^Q",["^L",[["~$x"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",21,"^I",21,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Returns the floor of `x`."],"~$rand-long",["^ ","^D",null,"^E",["^ ","^F","^<","^G",48,"^H",7,"^I",48,"^J",16,"^K",["^L",["^M",["^L",[["~$n"]]]]],"^N","Returns a random long value in range from 0 (inclusive) to `n` (exclusive)."],"^;","~$mikron.util.math/rand-long","^P",false,"^F","mikron/util/math.cljc","^J",16,"^Q",["^L",[["~$n"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",48,"^I",48,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$n"]]]]],"^N","Returns a random long value in range from 0 (inclusive) to `n` (exclusive)."],"~$to",["^ ","^D",null,"^E",["^ ","^F","^<","^G",81,"^H",7,"^I",81,"^J",9,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Converts a number `x` to a long."],"^;","~$mikron.util.math/to","^P",false,"^F","mikron/util/math.cljc","^J",9,"^Q",["^L",[["~$x"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",81,"^I",81,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Converts a number `x` to a long."],"~$shift-right",["^ ","^D",null,"^E",["^ ","^F","^<","^G",129,"^H",7,"^I",129,"^J",18,"^K",["^L",["^M",["^L",[["~$x","~$n"]]]]],"^N","Arithmetically shifts the bits of a long `x` to the right by `n`."],"^;","~$mikron.util.math/shift-right","^P",false,"^F","mikron/util/math.cljc","^J",18,"^Q",["^L",[["~$x","~$n"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",129,"^I",129,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["~$x","~$n"]]]]],"^N","Arithmetically shifts the bits of a long `x` to the right by `n`."],"~$unsigned-shift-right",["^ ","^D",null,"^E",["^ ","^F","^<","^G",135,"^H",7,"^I",135,"^J",27,"^K",["^L",["^M",["^L",[["~$x","~$n"]]]]],"^N","Logically shifts the bits of a long `x` to the right by `n`."],"^;","~$mikron.util.math/unsigned-shift-right","^P",false,"^F","mikron/util/math.cljc","^J",27,"^Q",["^L",[["~$x","~$n"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",135,"^I",135,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["~$x","~$n"]]]]],"^N","Logically shifts the bits of a long `x` to the right by `n`."],"~$shift-left",["^ ","^D",null,"^E",["^ ","^F","^<","^G",123,"^H",7,"^I",123,"^J",17,"^K",["^L",["^M",["^L",[["~$x","~$n"]]]]],"^N","Arithmetically shifts the bits of a long `x` to the left by `n`."],"^;","~$mikron.util.math/shift-left","^P",false,"^F","mikron/util/math.cljc","^J",17,"^Q",["^L",[["~$x","~$n"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",123,"^I",123,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["~$x","~$n"]]]]],"^N","Arithmetically shifts the bits of a long `x` to the left by `n`."],"^9",["^ ","^D",null,"^E",["^ ","^F","^<","^G",8,"^H",7,"^I",8,"^J",11,"^K",["^L",["^M",["^L",[[]]]]],"^N","Returns a random double value."],"^;","~$mikron.util.math/rand","^P",false,"^F","mikron/util/math.cljc","^J",11,"^Q",["^L",[[]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",8,"^I",8,"^T",0,"^U",true,"^K",["^L",["^M",["^L",[[]]]]],"^N","Returns a random double value."],"~$zigzag-decode",["^ ","^D",null,"^E",["^ ","^F","^<","^G",147,"^H",7,"^I",147,"^J",20,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Zigzag decodes a long `x`."],"^;","~$mikron.util.math/zigzag-decode","^P",false,"^F","mikron/util/math.cljc","^J",20,"^Q",["^L",[["~$x"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",147,"^I",147,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Zigzag decodes a long `x`."],"~$lower-bound",["^ ","^D",null,"^E",["^ ","^F","^<","^G",153,"^H",7,"^I",153,"^J",18,"^K",["^L",["^M",["^L",[["~$bytes","~$signed?"]]]]],"^N","Returns the lower bound for an integer value."],"^;","~$mikron.util.math/lower-bound","^P",false,"^F","mikron/util/math.cljc","^J",18,"^Q",["^L",[["^1:","^1;"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",153,"^I",153,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["^1:","^1;"]]]]],"^N","Returns the lower bound for an integer value."],"^6",["^ ","^D",null,"^E",["^ ","^F","^<","^G",99,"^H",7,"^I",99,"^J",9,"^K",["^L",["^M",["^L",[["~$x","~$y"]]]]],"^N","Performs the bitwise OR operation on two longs `x` and `y`."],"^;","~$mikron.util.math/or","^P",false,"^F","mikron/util/math.cljc","^J",9,"^Q",["^L",[["~$x","~$y"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",99,"^I",99,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["~$x","~$y"]]]]],"^N","Performs the bitwise OR operation on two longs `x` and `y`."],"~$pow",["^ ","^D",null,"^E",["^ ","^F","^<","^G",15,"^H",7,"^I",15,"^J",10,"^K",["^L",["^M",["^L",[["~$x","~$y"]]]]],"^N","Raises `x` to `y`."],"^;","~$mikron.util.math/pow","^P",false,"^F","mikron/util/math.cljc","^J",10,"^Q",["^L",[["~$x","~$y"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",15,"^I",15,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["~$x","~$y"]]]]],"^N","Raises `x` to `y`."],"^8",["^ ","^D",null,"^E",["^ ","^F","^<","^G",87,"^H",7,"^I",87,"^J",12,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Returns `true` if a long `x` is zero, `false` otherwise."],"^;","~$mikron.util.math/zero?","^P",false,"^F","mikron/util/math.cljc","^J",12,"^Q",["^L",[["~$x"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",87,"^I",87,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Returns `true` if a long `x` is zero, `false` otherwise."],"^7",["^ ","^D",null,"^E",["^ ","^F","^<","^G",111,"^H",7,"^I",111,"^J",10,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Performs the bitwise NOT operation on a long `x`."],"^;","~$mikron.util.math/not","^P",false,"^F","mikron/util/math.cljc","^J",10,"^Q",["^L",[["~$x"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",111,"^I",111,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Performs the bitwise NOT operation on a long `x`."],"~$c-128",["^ ","^;","~$mikron.util.math/c-128","^F","mikron/util/math.cljc","^G",77,"^H",1,"^I",77,"^J",11,"^E",["^ ","^F","^<","^G",77,"^H",6,"^I",77,"^J",11],"^N","The constant long -128."],"~$c128",["^ ","^;","~$mikron.util.math/c128","^F","mikron/util/math.cljc","^G",73,"^H",1,"^I",73,"^J",10,"^E",["^ ","^F","^<","^G",73,"^H",6,"^I",73,"^J",10],"^N","The constant long 128."],"~$upper-bound",["^ ","^D",null,"^E",["^ ","^F","^<","^G",160,"^H",7,"^I",160,"^J",18,"^K",["^L",["^M",["^L",[["^1:","^1;"]]]]],"^N","Returns the upper bound for an integer value."],"^;","~$mikron.util.math/upper-bound","^P",false,"^F","mikron/util/math.cljc","^J",18,"^Q",["^L",[["^1:","^1;"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",160,"^I",160,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["^1:","^1;"]]]]],"^N","Returns the upper bound for an integer value."],"~$c0",["^ ","^;","~$mikron.util.math/c0","^F","mikron/util/math.cljc","^G",61,"^H",1,"^I",61,"^J",8,"^E",["^ ","^F","^<","^G",61,"^H",6,"^I",61,"^J",8],"^N","The constant long 0."],"~$round",["^ ","^D",null,"^E",["^ ","^F","^<","^G",33,"^H",7,"^I",33,"^J",12,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Rounds `x`."],"^;","~$mikron.util.math/round","^P",false,"^F","mikron/util/math.cljc","^J",12,"^Q",["^L",[["~$x"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",33,"^I",33,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Rounds `x`."],"~$zigzag-encode",["^ ","^D",null,"^E",["^ ","^F","^<","^G",141,"^H",7,"^I",141,"^J",20,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Zigzag encodes a long `x`."],"^;","~$mikron.util.math/zigzag-encode","^P",false,"^F","mikron/util/math.cljc","^J",20,"^Q",["^L",[["~$x"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",141,"^I",141,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Zigzag encodes a long `x`."],"~$xor",["^ ","^D",null,"^E",["^ ","^F","^<","^G",105,"^H",7,"^I",105,"^J",10,"^K",["^L",["^M",["^L",[["~$x","~$y"]]]]],"^N","Performs the bitwise XOR operation on two longs `x` and `y`."],"^;","~$mikron.util.math/xor","^P",false,"^F","mikron/util/math.cljc","^J",10,"^Q",["^L",[["~$x","~$y"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",105,"^I",105,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["~$x","~$y"]]]]],"^N","Performs the bitwise XOR operation on two longs `x` and `y`."],"~$abs",["^ ","^D",null,"^E",["^ ","^F","^<","^G",27,"^H",7,"^I",27,"^J",10,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Returns the absolute value of `x`."],"^;","~$mikron.util.math/abs","^P",false,"^F","mikron/util/math.cljc","^J",10,"^Q",["^L",[["~$x"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",27,"^I",27,"^T",1,"^U",true,"^K",["^L",["^M",["^L",[["~$x"]]]]],"^N","Returns the absolute value of `x`."],"~$c1",["^ ","^;","~$mikron.util.math/c1","^F","mikron/util/math.cljc","^G",65,"^H",1,"^I",65,"^J",8,"^E",["^ ","^F","^<","^G",65,"^H",6,"^I",65,"^J",8],"^N","The constant long 1."],"~$interp",["^ ","^D",null,"^E",["^ ","^F","^<","^G",39,"^H",7,"^I",39,"^J",13,"^K",["^L",["^M",["^L",[["~$x","~$y","~$f"]]]]],"^N","Calculates a new value via linear interpolation."],"^;","~$mikron.util.math/interp","^P",false,"^F","mikron/util/math.cljc","^J",13,"^Q",["^L",[["~$x","~$y","~$f"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",39,"^I",39,"^T",3,"^U",true,"^K",["^L",["^M",["^L",[["~$x","~$y","~$f"]]]]],"^N","Calculates a new value via linear interpolation."],"~$from",["^ ","^D",null,"^E",["^ ","^F","^<","^G",53,"^H",7,"^I",53,"^J",11,"^K",["^L",["^M",["^L",[["~$x"],["~$low","~$high"]]]]],"^N","Creates a new long value.","~:top-fn",["^ ","^P",false,"^T",2,"^Q",["^L",[["~$x"],["^1W","^1X"]]],"^K",["^L",[["~$x"],["^1W","^1X"]]],"^S",["^L",[null,null]]]],"^;","~$mikron.util.math/from","^P",false,"^F","mikron/util/math.cljc","^J",11,"^1Y",["^ ","^P",false,"^T",2,"^Q",["^L",[["~$x"],["^1W","^1X"]]],"^K",["^L",[["~$x"],["^1W","^1X"]]],"^S",["^L",[null,null]]],"^Q",["^L",[["~$x"],["^1W","^1X"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",53,"^I",53,"^T",2,"^U",true,"^K",["^L",[["~$x"],["^1W","^1X"]]],"^N","Creates a new long value."],"^5",["^ ","^D",null,"^E",["^ ","^F","^<","^G",93,"^H",7,"^I",93,"^J",10,"^K",["^L",["^M",["^L",[["~$x","~$y"]]]]],"^N","Performs the bitwise AND operation on two longs `x` and `y`."],"^;","~$mikron.util.math/and","^P",false,"^F","mikron/util/math.cljc","^J",10,"^Q",["^L",[["~$x","~$y"]]],"^R",null,"^S",["^L",[null,null]],"^H",1,"^G",93,"^I",93,"^T",2,"^U",true,"^K",["^L",["^M",["^L",[["~$x","~$y"]]]]],"^N","Performs the bitwise AND operation on two longs `x` and `y`."],"~$c127",["^ ","^;","~$mikron.util.math/c127","^F","mikron/util/math.cljc","^G",69,"^H",1,"^I",69,"^J",10,"^E",["^ ","^F","^<","^G",69,"^H",6,"^I",69,"^J",10],"^N","The constant long 127."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["^1;","^1M","~$x","^1U","^1S","^C","^V","^X","^Z","^10","^1[","^18","^12","~$y","^21","^1=","~:ns","^;","^P","^F","^O","~$long","~$double","^J","^1Y","^1A","^W","^1C","^14","^Q","^9","^1E","^[","^S","^1G","^17","^H","^13","^19","^6","~$n","^1>","^1O","^8","^1Q","^G","^1Z","^7","^1B","^16","^15","^1D","^<","^1F","^I","^1H","^1X","^1J","^1L","^1<","^1?","^T","~:tag","^1@","^1N","^1P","^1R","^1T","^K","^1V","^N","^Y","~:test","^1W","^11","^5","^1K","^1I","^20","^1:","~$f"]],"~:order",["^16","^25","^;","^F","^J","^H","^G","^I","^K","^N","^29","^<","^9","^1?","^1>","~$x","^28","^27","~$y","^W","^V","^1Q","^1P","^1K","^1J","^1U","^1T","~$f","^Y","^X","~$n","^26","^1Z","^1Y","^1V","^P","^T","^Q","^S","^1W","^1X","^1I","^1H","^1S","^1R","^21","^20","^1E","^1D","^1C","^1B","^[","^Z","^1@","^8","^1[","^5","^1=","^6","^1O","^1N","^1A","^7","^O","^C","^15","^14","^11","^10","^13","^12","^1M","^1L","^18","^17","^1<","^19","^1:","^1;","^1G","^1F"]],"^N","Numeric utility functions."]